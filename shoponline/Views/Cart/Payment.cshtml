@model shoponline.Models.CartModel
@{
    ViewBag.Title = "Thanh toán";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
@{
    var cart = shoponline.Code.SessionHelper.GetSessionCart();
    var list = new List<shoponline.Models.CartItemModel>();
    if (cart != null)
    {
        list = (List<shoponline.Models.CartItemModel>)cart;
    }
    if (list.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <td>Mã sản phẩm</td>
                    <td>Tên sản phẩm</td>
                    <td>Hình ảnh</td>
                    <td>Số lượng </td>
                    <td>Đơn giá</td>
                    <td>Thành tiền</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in list)
                {
                    <tr>
                        <td>@item.Product.Code</td>
                        <td>@item.Product.Name</td>
                        <td>
                            @if (item.Product.Thumbnail != null)
                    {
                                <img src="@item.Product.Thumbnail" alt="@item.Product.Name" width="70" />
                            }
                        </td>
                        <td>
                            @item.Quantity
                        </td>
                        <td>
                            @(item.Product.Price.GetValueOrDefault(0) - (item.Product.Price.GetValueOrDefault(0) * (item.Product.Sale / 100)))
                        </td>
                        <td>
                            @(item.Quantity * (item.Product.Price.GetValueOrDefault(0) - (item.Product.Price.GetValueOrDefault(0) * (item.Product.Sale / 100))))
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
            </div>
            @using (Html.BeginForm("Payment", "Cart", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn">Gửi đơn hàng</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
