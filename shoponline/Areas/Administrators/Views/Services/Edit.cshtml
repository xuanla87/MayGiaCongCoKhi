@model shoponline.Models.ServicesModel
@{
    ViewBag.Title = "Sửa dịch vụ";
    Layout = "~/Areas/Administrators/Views/Shared/_LayoutAdmin.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckfinder/ckfinder.js"></script>
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Sửa dịch vụ
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li>Danh sách dịch vụ</li>
        <li class="active">Sửa dịch vụ</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">
        <!-- Left col -->
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    @Html.ActionLink("Thêm dịch vụ", "Add")
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="box-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserId)
                        @Html.HiddenFor(model => model.Name)
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.Date)
                        @Html.HiddenFor(model => model.View)
                        @Html.HiddenFor(model => model.Taxonomy)
                        @Html.HiddenFor(model => model.Status)
                        @Html.HiddenFor(model => model.ParentId)
                        @Html.HiddenFor(model => model.Order)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @onchange = "javascript: Changed(this);" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.CategoryId, null, "None", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control" } })
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-warning select-img">Chọn ảnh</button>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Content, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">

                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Modified, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.EditorFor(model => model.Modified, new { htmlAttributes = new { @class = "form-control", @type = "datetime" } })
                                    </div><!-- /.input group -->
                                    @Html.ValidationMessageFor(model => model.Modified, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6">

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Meta_Title, htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Meta_Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Meta_Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Meta_Keyword, htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Meta_Keyword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Meta_Keyword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Meta_Description, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Meta_Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Meta_Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Update" class="btn btn-default" />
                        </div>
                    </div>
                }
                <div class="box-footer">
                    @Html.ActionLink("Trở lại dánh sách", "Index")
                </div>
            </div>
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->
<script>
    $(function () {
        CKEDITOR.replace('Content');
        CKEDITOR.replace('Description');
    });
</script>
<script>
    function Changed(textControl) {
        document.getElementById('Slug').value = bodauTiengViet(textControl.value);
        document.getElementById('Name').value = bodauTiengViet(textControl.value);
        textControl.value = textControl.value.replace(/ + /g, " ");
        textControl.value = textControl.value.replace(/^\ +|\ +$/g, "");
    }
    function bodauTiengViet(str) {
        str = str.toLowerCase();
        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
        str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
        str = str.replace(/đ/g, "d");
        str = str.replace(/!|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'| |\"|\&|\#|\[|\]|~|$|_|{|}|`/g, "-");
        str = str.replace(/ /g, "-");
        str = str.replace(/-+-/g, "-");
        str = str.replace(/^\-+|\-+$/g, "");
        return str;
    }
</script>
<script>
    $(function () {
        $(".select-img").click(function () {
            var ckfiner = new CKFinder();
            ckfiner.selectActionFunction = function (fileUrl) {
                $("#Thumbnail").val(fileUrl);
            };
            ckfiner.popup();
        });
    });
</script>
